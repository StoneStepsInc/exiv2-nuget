Date:   Tue Oct 10 19:40:53 2023 -0400

    Changed CMake settings to generate debug-friendly libraries
    
    * Removed /Ox for debug builds and added /Od (disable
      optimizations), /RTC1 (enable runtime checks)
    * Removed settings replacing /MD with /MT. Doing so creates
      error-prone runtime configurations that may allocate memory
      in one module and will crash if it is deallocated in another
      module. It also requires callers to be compiled with a
      built-in MSVC CRT, which is a less-used configuration for
      many good reasons.
    * Removed settings that remove Ob2 and /Ob1 from configurations
      (inline expansion) because contrary to the comment, they do
      not cause linker issues if used as intended.
    * Changed release builds to generate debug symbols. This has
      downside and helps tremendously in debugging production
      crashes and lock-ups.
    * Added a future CMake option to generate UseDebugLibraries,
      when it will become available in or after CMake v3.30.
    * Added SUPPRESS_WARNINGS define, which removes out-of-context
      warnings generated by some of the code, such as TIFF the
      image handler.

diff --git a/cmake/compilerFlags.cmake b/cmake/compilerFlags.cmake
index dc82f2bcb..c1ea3009a 100644
--- a/cmake/compilerFlags.cmake
+++ b/cmake/compilerFlags.cmake
@@ -133,7 +133,12 @@ if(MSVC)
 
     # Make Debug builds a little faster without sacrificing debugging experience
     #set (CMAKE_CXX_FLAGS_DEBUG "/MDd /Zi /Ob0 /Od /RTC1")
-    set (CMAKE_CXX_FLAGS_DEBUG "/MDd /Zi /Ob0 /Ox /Zo")
+    #set (CMAKE_CXX_FLAGS_DEBUG "/MDd /Zi /Ob0 /Ox /Zo")
+
+    #
+    # /Ox should not be enabled for debug builds, with or without "optimized debugging"
+    #
+    set (CMAKE_CXX_FLAGS_DEBUG "/MDd /Zi /Ob0 /Od /RTC1")
     # /Ox (Enable Most Speed Optimizations)
     # /Zo (Enhance Optimized Debugging)
 
@@ -144,29 +149,51 @@ if(MSVC)
       CMAKE_CXX_FLAGS_RELWITHDEBINFO
     )
 
-    if (NOT BUILD_SHARED_LIBS AND NOT EXIV2_ENABLE_DYNAMIC_RUNTIME)
-         message(STATUS "MSVC -> forcing use of statically-linked runtime." )
-         foreach(variable ${variables})
-             if(${variable} MATCHES "/MD")
-                 string(REGEX REPLACE "/MD" "/MT" ${variable} "${${variable}}")
-             endif()
-         endforeach()
-    endif()
-
+    #
+    # This is just a terrible idea, making this library unusable
+    # for applications that build with MSVC CRT in a DLL.
+    #
+    #if (NOT BUILD_SHARED_LIBS AND NOT EXIV2_ENABLE_DYNAMIC_RUNTIME)
+    #     message(STATUS "MSVC -> forcing use of statically-linked runtime." )
+    #     foreach(variable ${variables})
+    #         if(${variable} MATCHES "/MD")
+    #             string(REGEX REPLACE "/MD" "/MT" ${variable} "${${variable}}")
+    #         endif()
+    #     endforeach()
+    #endif()
+
+    #
+    # Inlining provides good performance benefits and should not
+    # be disabled.
+    #
     # remove /Ob2 and /Ob1 - they cause linker issues
-    set(obs /Ob2 /Ob1)
-    foreach(ob ${obs})
-        foreach(variable ${variables})
-            if(${variable} MATCHES ${ob} )
-                string(REGEX REPLACE ${ob} "" ${variable} "${${variable}}")
-            endif()
-      endforeach()
-    endforeach()
+    #set(obs /Ob2 /Ob1)
+    #foreach(ob ${obs})
+    #    foreach(variable ${variables})
+    #        if(${variable} MATCHES ${ob} )
+    #            string(REGEX REPLACE ${ob} "" ${variable} "${${variable}}")
+    #        endif()
+    #  endforeach()
+    #endforeach()
 
     if ( EXIV2_EXTRA_WARNINGS )
         string(REGEX REPLACE "/W[0-4]" "/W4" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
     endif ()
 
+    #
+    # Having debug symbols has no downside and helps a lot when
+    # troubleshooting issues in released binaries, so we add /Zi
+    # to the release configuration if it's not there already.
+    #
+    # Ignore RelWithDebInfo and MinSizeRel because our Nuget
+    # dependencies have only Debug and Release configurations.
+    #
+    string(FIND ${CMAKE_CXX_FLAGS_RELEASE} "/Zi" HAS_MSVC_Zi)
+
+    if(HAS_MSVC_Zi EQUAL -1)
+        string(APPEND CMAKE_CXX_FLAGS_RELEASE " /Zi")
+    endif()
+    
     add_compile_options(/MP)    # Object Level Parallelism
     add_compile_options(/utf-8) # Set source and execution character sets to UTF-8
     add_definitions(-DNOMINMAX) # This definition is not only needed for Exiv2 but also for xmpsdk
diff --git a/cmake/generateConfigFile.cmake b/cmake/generateConfigFile.cmake
index 20e331c04..3dd2fc934 100644
--- a/cmake/generateConfigFile.cmake
+++ b/cmake/generateConfigFile.cmake
@@ -24,6 +24,11 @@ set(EXV_HAVE_ICONV       ${ICONV_FOUND})
 set(EXV_HAVE_LIBZ        ${ZLIB_FOUND})
 set(EXV_HAVE_BROTLI      ${BROTLI_FOUND})
 
+if(CMAKE_VERSION VERSION_GREATER_EQUAL "3.30.0")
+    # generate UseDebugLibraries, so correct libraries are used from Nuget packages
+    set(CMAKE_VS_USE_DEBUG_LIBRARIES "$<CONFIG:Debug>")
+endif()
+
 check_cxx_symbol_exists(strerror_r  string.h       EXV_HAVE_STRERROR_R )
 
 check_cxx_source_compiles( "
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 9e1e87580..8fe7366c6 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -163,6 +163,9 @@ set_target_properties( exiv2lib PROPERTIES
     COMPILE_FLAGS ${EXTRA_COMPILE_FLAGS}
 )
 
+# disable out-of-context errors and warnings printed to stderr
+add_compile_definitions(SUPPRESS_WARNINGS)
+
 if (MSVC)
     set_target_properties(exiv2lib PROPERTIES LINK_FLAGS "/ignore:4099")
 endif()
